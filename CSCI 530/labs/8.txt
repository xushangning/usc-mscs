1. By the definition of ARP poisoning given in the question, it is impossible to poison node4 from node1, because they are on different subnets. The source MAC address in any crafted ARP message sent by node1 to node4 wil be node0's MAC address, rather than node1's, as node0 changes the source MAC address during forwarding. Without the ability to insert its own address into the source MAC address field, node1 can't poison node4's ARP table with its MAC address.
2. The MAC addresses in the output show that a frame was first sent by node2 to node1 and then forwarded by node1 to node0.
3. node1 was able to sniff the FTP user name and password by ARP spoofing. It gave node2 its own MAC address and told node2 the MAC address was node0's, and gave node0 its own MAC address and told node0 the MAC address was node2's. Because node0 acted as a router for the subnet, when node2 connected to node4's FTP server on another subnet, the traffic would go through node2 and thus sniffed by node1, which obtained the user name and password.
4. First, an ARP spoofing attack at the client can only performed by a host connected to the client's local area network, which means the attack's scope is limited: only computers connected to the client's network can see the defacement. To mitigate the attack, the client should inspect ARP tables of affected computers to locate the attacker's computer and pursue an investigation. To end the defacement, remove the attacker's computer from the network and then flush the ARP tables on affected computers. To prevent such attacks in the future, the client should enforce HTTPS on its website so that the HTTP content is encrypted and no modification to the content is possible during transmission.
